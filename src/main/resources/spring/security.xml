<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                                 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <http use-expressions="true">
        <intercept-url pattern="/admin/**"          access="hasAuthority('ROLE_ADMIN')" />
        <intercept-url pattern="/public-project/**" access="hasAnyAuthority('ROLE_ADMIN', 'ROLE_MEMBER')" />
        <intercept-url pattern="/project/**"        access="isAuthenticated()" />
        <intercept-url pattern="/redirect-index"    access="isAuthenticated()" />
        <intercept-url pattern="/**"                access="permitAll()" />

        <csrf disabled="true" />
        <form-login />
        <logout />
    </http>

    <authentication-manager>
        <authentication-provider>
            <!-- TODO : #5 jdbc-user-service -->
            <jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="SELECT MNAME, PWD, TRUE FROM MEMBERS WHERE MNAME = ?"
                    authorities-by-username-query="SELECT MNAME, AUTHORITY FROM AUTHORITIES WHERE MNAME = ?"
            />
        </authentication-provider>
    </authentication-manager>

</beans:beans>
